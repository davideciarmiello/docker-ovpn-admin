name: GitHub Actions Demo
on: [push]
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      #output1: ${{ steps.step_get_remote_version.outputs.remote_vers }}
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      #- name: Clone flant/ovpn-admin repository
      #  uses: GuillaumeFalourd/clone-github-repo-action@v2
      #  with:
      #    owner: 'flant'
      #    repository: 'ovpn-admin'
    
      - name: Checkout
        run: |
          git clone https://github.com/flant/ovpn-admin.git
        
      - name: Access cloned repository content ls
        run: |
          cd ovpn-admin
          ls
          
      - id: step_get_remote_version
        name: Access cloned repository content
        run: |
          cd ovpn-admin
          echo "step 1"
          gitdate=$(git log -1 --pretty='format:%cd' --date=format:'%Y%m%d%S')
          echo "step 2"
          vers="$(git describe --tags --abbrev=0).$gitdate"
          echo "step 3"
          echo "Current remote version: $vers"
          #echo "remote_vers=$(vers)" >> $GITHUB_ENV
          #echo "::set-output name=remote_vers::$vers"
          
      - id: step0
        run: echo "something"

      - id: step1
        if: success()
        run: echo "::set-output name=test::success"

  job2:
    runs-on: ubuntu-latest
    outputs:
      output2: ${{ steps.step1.outputs.test }}
    steps:
      - id: step0
        run: echo "something"

      - id: step1
        if: success()
        run: echo "::set-output name=test::success"

  job3:
    runs-on: ubuntu-latest
    needs: [job1, job2]
    if: needs.job1.outputs.output1 == 'success' && needs.job2.outputs.output2 == 'success'
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job2.outputs.output2}}

  #Explore-GitHub-Actions:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    # - name: Check out repository code
    #   uses: actions/checkout@v3
    # - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    # - name: List files in the repository
    #   run: |
    #     ls ${{ github.workspace }}
    # - run: echo "üçè This job's status is ${{ job.status }}."
    # 
    # - name: Clone flant/ovpn-admin repository
    #   uses: GuillaumeFalourd/clone-github-repo-action@v2
    #   with:
    #     owner: 'flant'
    #     repository: 'ovpn-admin'
    # - name: Access cloned repository content
    #   run: |
    #     cd ovpn-admin
    #     ls -la
    #     cat .git/refs/heads/master
      #- uses: stefanzweifel/git-auto-commit-action@v4
      #  with:
      #    commit_message: Apply ovpn-admin changes

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v2
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2
    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USER }}
    #     password: ${{ secrets.DOCKER_PASS }}      
      
     # - name: Build and push
     #   uses: docker/build-push-action@v3
     #   with:
     #     context: .
     #     platforms:  linux/arm/v7,linux/arm64/v8,linux/amd64
     #     push: true
     #     tags: davideciarmi/ovpn-admin:latest
          
      #- name: Push ovpn-admin image to Docker Hub
      #  uses: docker/build-push-action@v1
      #  with:
      #    username: ${{ secrets.DOCKER_USER }}
      #    password: ${{ secrets.DOCKER_PASS }}
      #    repository: flant/ovpn-admin
      #    tags: latest
      #    dockerfile: Dockerfile
      #    
